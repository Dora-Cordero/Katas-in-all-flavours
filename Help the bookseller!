"""
A bookseller has lots of books classified in 26 categories labeled A, B, ... Z. Each book has a code c of 3, 4, 5 or 
more characters. The 1st character of a code is a capital letter which defines the book category.

In the bookseller's stocklist each code c is followed by a space and by a positive integer n (int n >= 0) 
which indicates the quantity of books of this code in stock.

For example an extract of a stocklist could be:

                        L =  ["ABART 20", "CDXEF 50", "BKWRK 25", "BTSQZ 89", "DRTYM 60"]

You will be given a stocklist (e.g. : L) and a list of categories in capital letters e.g :
                                            M = ["A", "B", "C", "W"]
and your task is to find all the books of L with codes belonging to each category of M and to sum their quantity 
according to each category.

For the lists L and M of example you have to return the string
                                    (A : 20) - (B : 114) - (C : 50) - (W : 0)
If L or M are empty ([]) return "".

"""

def stock_list(L, M):
    if L ==[] or M ==[]:
        return ""
    else:
        new_L = {} 
        for book in L:
            num=""
            letter = book[0]
            for page in book:
                if page.isdigit():
                    num = num + page
            if letter not in new_L:
                new_L[letter] = int(num)
            else:
                new_L[letter] += int(num)    
            letter = ""
            num = ""
        answer = ""
        for letter in M:
            if letter in new_L.keys():
                answer = answer + "({} : {}) - ".format(letter,new_L[letter])
            else:
                answer = answer + "({} : {}) - ".format(letter,0)
        answer = answer[:-3]
        return answer
